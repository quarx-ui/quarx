export const sizesDescription = 'Параметр `size` влияет на положение заголовка, высоту поля и скругления. '
    + 'Представлено 3 значения:'
    + '<br/>'
    + '`small` — маленький.'
    + '<br/>'
    + '`medium` — средний.'
    + '<br/>'
    + '`large` — большой размер.';

export const colorBaseDescription = 'Параметр `colorBase` используется для выбора цвета текстового поля для разного фона. '
    + 'Представлено 2 значения:'
    + '<br/>'
    + '`main` — для использования на белом фоне.'
    + '<br/>'
    + '`secondary` — используется на сером или другом фоне.';

export const helperDescription = 'В качестве простой подсказки для упрощения ввода можно использовать `helperText`.'
    + '<br/>'
    + 'Для отображения максимального количества символов и счетчика символов '
    + 'используется `maxLength` и `counter` (без указания `maxLength` будет отображен только счетчик). '
    + 'По умолчанию счетчик будет отображен при фокусе на поле или при наличии значения.'
    + '<br/>'
    + '`errorText` используется для отображения текста ошибки ввода, но данное свойство будет отключено, '
    + 'если в пропс `error` передано значение `false`.';

export const overflowDescription = 'Свойство `overflow` используется для разрешения/запрета переполнения текстового поля.'
    + '<br/>'
    + 'Для указания максимального количества символов используется свойство `maxLength`.';

export const borderRadiusDescription = 'Скругление компонента. Значения соответствуют токенам объекта `borderRadii`';

export const visibilityOfClearIconDescription = 'Поведение появления иконки очистки поля можно изменить пропсом `clearIconVisibleOn`:'
    + '<br/>'
    + '`interact` - появление иконки при наведении или при фокусе,'
    + '<br/>'
    + '`always` - появление иконки, при вводе текста,'
    + '<br/>'
    + '`none` - отключение иконки,'
    + '<br/>'
    + '**Примечание**: При использовании свойства `interact`, '
    + 'необходимо задать фиксированную ширину компоненту или его контейнеру, '
    + 'иначе при появлении иконки компонент начнет расширяться.';

export const textAreaDescription = 'При использовании пропса `multiline` со значением `true`, '
    + 'текстовое поле становится многострочным, '
    + 'а вместо элемента `input` рендерится `textarea`.'
    + '<br />'
    + 'Для задания высоты `textarea` можно использовать свойство `rows`, '
    + 'которое зафиксирует указанное количество строк. '
    + 'Также, можно указать максимальное (`maxRows`) и минимальное (`minRows`) количество строк.';

export const externalSettingsDescription = 'Ниже представлены возможности управления состоянием снаружи.'
    + '<br />'
    + '**Примечание**: При управлении состоянием `focused`/`filled` снаружи также придется обрабатывать '
    + 'все действия пользователя с фокусом/заполненности. Если необходимо отдать управление внутреннему состоянию '
    + 'передайте в пропс `focused`/`filled` значение `undefined`.';

export const masksDescription = 'Ниже представлены примеры использования компонента с библиотеками `react-input-mask` и `react-number-format`.';
